---
- hosts: test
  tasks:
  - name: checking kernel param net.ipv4.ip_forward
    shell: sysctl -a | grep  "net.ipv4.ip_forward = 0"
    register: check_net_forward
    ignore_errors: yes
  - shell: sysctl -w net.ipv4.ip_forward=0
    when: check_net_forward.stdout == ""
    notify:
      - setting net ipv4 flush param
    when: check_net_forward.stdout == ""


  - name: checking kernel net.ipv4.conf.all.send_redirects
    shell: sysctl -a | grep  "net.ipv4.conf.all.send_redirects = 0"
    register: net_all
    ignore_errors: yes
  - shell: sysctl -a | grep "net.ipv4.conf.default.send_redirects = 0"
    register: net_def
    ignore_errors: yes


  - shell: sysctl -w net.ipv4.conf.all.send_redirects=0
    when:  net_all.stdout == ""
    notify:
      - setting net ipv4 flush param

  - shell: sysctl -w net.ipv4.conf.default.send_redirects=0
    when: net_def.stdout == ""
    notify:
      - setting net ipv4 flush param



  - name: checking kernel net.ipv4.conf.all.send_redirects
    shell: sysctl -a | grep  "net.ipv4.conf.all.accept_source_route = 0"
    register: net_conf_all
    ignore_errors: yes
   
  - shell: sysctl -w net.ipv4.conf.all.accept_source_route=0
    when: net_conf_all.stdout == ""
    notify:
      - setting net ipv4 flush param


  - name: checking kernel net.ipv4.conf.all.send_redirects
    shell: sysctl -a | grep  "net.ipv4.conf.default.accept_source_route = 0"
    register: net_conf_def
    ignore_errors: yes
 
  - shell: sysctl -w net.ipv4.conf.default.accept_source_route=0
    when: net_conf_def.stdout == ""
    notify:
      - setting net ipv4 flush param


  - name: checking kernel net.ipv4.conf.all.secure_redirects
    shell: sysctl -a | grep  "net.ipv4.conf.all.secure_redirects = 0"
    register: net_sec_all
    ignore_errors: yes
  
  - shell: sysctl -w net.ipv4.conf.all.secure_redirects=0
    when: net_sec_all.stdout == ""
    notify:
       - setting net ipv4 flush param 

  - name: checking kernel net.ipv4.conf.default.secure_redirects
    shell: sysctl -a | grep  "net.ipv4.conf.default.secure_redirects = 0"
    register: net_sec_def
    ignore_errors: yes
 
  - shell: sysctl -w net.ipv4.conf.default.secure_redirects=0
    when: net_sec_def.stdout == ""
    notify:
       - setting net ipv4 flush param

  
  - name: checking kernel net.ipv4.conf.all.log_martians
    shell: sysctl -a | grep  "net.ipv4.conf.all.log_martians = 1"
    register: net_log_all
    ignore_errors: yes

  - shell: sysctl -w net.ipv4.conf.all.log_martians=1
    when: net_log_all.stdout == ""
    notify: 
      - setting net ipv4 flush param
  
  - name: checking kernel net.ipv4.conf.all.log_martians
    shell: sysctl -a | grep  "net.ipv4.conf.default.log_martians = 1"
    register: net_log_def
    ignore_errors: yes
  
  - shell: sysctl -w net.ipv4.conf.default.log_martians=1
    when: net_log_def.stdout == ""
    notify:
      - setting net ipv4 flush param

  - name: checking kernel net.ipv4.icmp_echo_ignore_broadcasts
    shell: sysctl -a | grep  "net.ipv4.icmp_echo_ignore_broadcasts = 1"
    register: broadcast
    ignore_errors: yes
 
  - shell: sysctl -2 net.ipv4.icmp_echo_ignore_broadcasts=1
    when: broadcast.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv4.icmp_ignore_bogus_error_responses
    shell: sysctl -a | grep  "net.ipv4.icmp_ignore_bogus_error_responses = 1"
    register: error_res
    ignore_errors: yes

  - shell: sysctl -w
    when: error_res.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv4.conf.all.rp_filter
    shell: sysctl -a | grep  "net.ipv4.conf.all.rp_filter = 1"
    register: all_filter
    ignore_errors: yes

  - shell: sysctl -w net.ipv4.conf.all.rp_filter=1
    when: all_filter.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv4.conf.default.rp_filter=1
    shell: sysctl -a | grep  "net.ipv4.conf.default.rp_filter = 1"
    register: def_filter
    ignore_errors: yes

  - shell: sysctl -w net.ipv4.conf.default.rp_filter=1=1
    when: def_filter.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv4.tcp_syncookies
    shell: sysctl -a | grep  "net.ipv4.tcp_syncookies = 1"
    register: syncookies
    ignore_errors: yes

  - shell: sysctl -w net.ipv4.tcp_syncookies
    when: syncookies.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: Ensure ipv6 is disabled, no ipv6 entry
    shell: grep '^\s*kernel.*ipv6.disable=1.*' /boot/grub/grub.conf
    ignore_errors: yes
    register: ipv6_status

  - name: checking kernel net.ipv6.conf.all.accept_ra
    shell: sysctl -a | grep  "net.ipv6.conf.all.accept_ra = 0"
    register: ipv6_all
    ignore_errors: yes

  - shell: sysctl -w net.ipv6.conf.all.accept_ra=0
    when: ipv6_all.stdout == "" and ipv6_status.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv6.conf.default.accept_ra
    shell: sysctl -a | grep  "net.ipv6.conf.default.accept_ra = 0"
    register: ipv6_def
    ignore_errors: yes

  - shell: sysctl -w net.ipv6.conf.all.accept_ra=0
    when: ipv6_def.stdout == "" and ipv6_status.stdout == ""
    notify:
     - setting net ipv4 flush param

  - name: checking kernel net.ipv6.conf.all.accept_redirects
    shell: sysctl -a | grep  "net.ipv6.conf.all.accept_redirects = 0"
    register: ipv6_conf_all
    ignore_errors: yes

  - shell: sysctl -w net.ipv6.conf.all.accept_redirects=0
    when: ipv6_conf_all.stdout == "" and ipv6_status.stdout == ""
    notify:
     - setting net ipv4 flush param


  - name: ensure /etc/hosts.allow existence
    copy:
      src: /etc/hosts.allow
      dest: /usr/share/cis
  - file:
      path: /etc/hosts.allow
      owner: root
      group: root
      mode: '644'

  - name: ensure /etc/hosts.deny existence
    copy:
      src: /etc/hosts.deny
      dest: /usr/share/cis
  - file:
     path: /etc/hosts.deny
     owner: root
     group: root
     mode: '644'
  
  - name: disabling ipv6
    lineinfile:
     path: /boot/grub/grub.conf
     backrefs: yes
     regexp: '^(\s*kernel.*)'
     line: '\1 ipv6.disable=1'
    when: ipv6_status.stdout == ""

  - name: 4.1.3 Ensure auditing for processes that start prior to auditd is enabled
    shell: grep '^\s*kernel.*audit=1.*' /boot/grub/grub.conf
    ignore_errors: yes
    register: prior_status

  - name: adding audit=1
    lineinfile: 
     path: /boot/grub/grub.conf
     backup: True
     backrefs: True
     state: present
     regexp: '^(\s*kernel.*)'
     line: '\1 audit=1'
    when: prior_status.stdout == ""

  handlers:
  - name: sleep
    pause:
     seconds: 7
  - name: setting net ipv4 flush param
    shell: sysctl -w net.ipv4.route.flush=1

  - name: reload the rsyslogd configuration
    shell: pkill -HUP rsyslogd

  - name: reload the syslog-ng configuration
    shell: pkill -HUP syslog-ng


